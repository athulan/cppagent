digraph G
{
  bgcolor="transparent";
  edge [fontname="FreeSans",fontsize=10,labelfontname="FreeSans",labelfontsize=10];
  node [fontname="FreeSans",fontsize=10,shape=record];
  rankdir=LR;
  Node1 [label="xmlpp::NonCopyable",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [dir=back,color="firebrick4",fontsize=10,style="solid",fontname="FreeSans"];
  Node2 [label="xmlpp::Document",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1Document.html",tooltip="Represents an XML document in the DOM model."];
  Node1 -> Node3 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans"];
  Node3 [label="xmlpp::Node",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1Node.html",tooltip="Represents XML Nodes."];
  Node3 -> Node4 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans"];
  Node4 [label="xmlpp::Attribute",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1Attribute.html",tooltip="Represents XML Node attributes."];
  Node3 -> Node5 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans"];
  Node5 [label="xmlpp::ContentNode",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1ContentNode.html",tooltip="Content Node."];
  Node5 -> Node6 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans"];
  Node6 [label="xmlpp::CdataNode",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1CdataNode.html",tooltip="CData node."];
  Node5 -> Node7 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans"];
  Node7 [label="xmlpp::CommentNode",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1CommentNode.html",tooltip="Comment Node."];
  Node5 -> Node8 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans"];
  Node8 [label="xmlpp::ProcessingInstructionNode",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1ProcessingInstructionNode.html"];
  Node5 -> Node9 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans"];
  Node9 [label="xmlpp::TextNode",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1TextNode.html",tooltip="Text Node."];
  Node3 -> Node10 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans"];
  Node10 [label="xmlpp::Element",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1Element.html",tooltip="Element nodes have attributes as well as child nodes."];
  Node3 -> Node11 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans"];
  Node11 [label="xmlpp::EntityReference",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1EntityReference.html",tooltip="Entity references refer to previously declared entities."];
  Node1 -> Node12 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans"];
  Node12 [label="xmlpp::OutputBuffer",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1OutputBuffer.html",tooltip="Base class for xmlOutputBuffer wrapper."];
  Node12 -> Node13 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans"];
  Node13 [label="xmlpp::OStreamOutputBuffer",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1OStreamOutputBuffer.html",tooltip="An OutputBuffer implementation that send datas to a std::ostream."];
  Node1 -> Node14 [dir=back,color="firebrick4",fontsize=10,style="solid",fontname="FreeSans"];
  Node14 [label="xmlpp::Parser",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1Parser.html",tooltip="XML parser."];
  Node14 -> Node15 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans"];
  Node15 [label="xmlpp::DomParser",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1DomParser.html",tooltip="XML DOM parser."];
  Node14 -> Node16 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans"];
  Node16 [label="xmlpp::SaxParser",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1SaxParser.html",tooltip="SAX XML parser."];
  Node1 -> Node17 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans"];
  Node17 [label="xmlpp::ParserInputBuffer",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1ParserInputBuffer.html",tooltip="Base class for xmlParserInputBuffer wrapper."];
  Node17 -> Node18 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans"];
  Node18 [label="xmlpp::IStreamParserInputBuffer",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1IStreamParserInputBuffer.html"];
  Node1 -> Node19 [dir=back,color="firebrick4",fontsize=10,style="solid",fontname="FreeSans"];
  Node19 [label="xmlpp::Schema",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1Schema.html",tooltip="Represents XML Schema."];
  Node1 -> Node20 [dir=back,color="firebrick4",fontsize=10,style="solid",fontname="FreeSans"];
  Node20 [label="xmlpp::TextReader",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1TextReader.html"];
  Node1 -> Node21 [dir=back,color="firebrick4",fontsize=10,style="solid",fontname="FreeSans"];
  Node21 [label="xmlpp::Validator",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1Validator.html",tooltip="XML parser."];
  Node21 -> Node22 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans"];
  Node22 [label="xmlpp::DtdValidator",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1DtdValidator.html",tooltip="XML DOM parser."];
  Node21 -> Node23 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans"];
  Node23 [label="xmlpp::SchemaValidator",height=0.2,width=0.4,color="black",URL="$classxmlpp_1_1SchemaValidator.html",tooltip="XML DOM parser."];
}
